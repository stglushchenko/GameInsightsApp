// <auto-generated />
using System;
using GameInsightsApp.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GameInsightsApp.Models.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20201213072714_SeedData")]
    partial class SeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("GameInsightsApp.Models.Entities.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpectatorEmployeeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Game 1",
                            SpectatorEmployeeName = "John Smith"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Game 2",
                            SpectatorEmployeeName = "Jack Smith"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Game 3",
                            SpectatorEmployeeName = "James Smith"
                        });
                });

            modelBuilder.Entity("GameInsightsApp.Models.Entities.GameEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("EventType")
                        .HasColumnType("int");

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GameEvents");
                });

            modelBuilder.Entity("GameInsightsApp.Models.Entities.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Player 1",
                            TeamId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Player 2",
                            TeamId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Player 3",
                            TeamId = 1
                        },
                        new
                        {
                            Id = 4,
                            Name = "Player 4",
                            TeamId = 1
                        },
                        new
                        {
                            Id = 5,
                            Name = "Player 5",
                            TeamId = 2
                        },
                        new
                        {
                            Id = 6,
                            Name = "Player 6",
                            TeamId = 2
                        },
                        new
                        {
                            Id = 7,
                            Name = "Player 7",
                            TeamId = 3
                        },
                        new
                        {
                            Id = 8,
                            Name = "Player 8",
                            TeamId = 3
                        },
                        new
                        {
                            Id = 9,
                            Name = "Player 9",
                            TeamId = 3
                        });
                });

            modelBuilder.Entity("GameInsightsApp.Models.Entities.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Team Red"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Team Blue"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Team Green"
                        });
                });

            modelBuilder.Entity("GameTeam", b =>
                {
                    b.Property<int>("GamesId")
                        .HasColumnType("int");

                    b.Property<int>("TeamsId")
                        .HasColumnType("int");

                    b.HasKey("GamesId", "TeamsId");

                    b.HasIndex("TeamsId");

                    b.ToTable("GameTeam");

                    b.HasData(
                        new
                        {
                            GamesId = 1,
                            TeamsId = 1
                        },
                        new
                        {
                            GamesId = 1,
                            TeamsId = 2
                        },
                        new
                        {
                            GamesId = 2,
                            TeamsId = 1
                        },
                        new
                        {
                            GamesId = 2,
                            TeamsId = 3
                        },
                        new
                        {
                            GamesId = 3,
                            TeamsId = 2
                        },
                        new
                        {
                            GamesId = 3,
                            TeamsId = 3
                        });
                });

            modelBuilder.Entity("GameInsightsApp.Models.Entities.Player", b =>
                {
                    b.HasOne("GameInsightsApp.Models.Entities.Team", null)
                        .WithMany("Players")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GameTeam", b =>
                {
                    b.HasOne("GameInsightsApp.Models.Entities.Game", null)
                        .WithMany()
                        .HasForeignKey("GamesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameInsightsApp.Models.Entities.Team", null)
                        .WithMany()
                        .HasForeignKey("TeamsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GameInsightsApp.Models.Entities.Team", b =>
                {
                    b.Navigation("Players");
                });
#pragma warning restore 612, 618
        }
    }
}
